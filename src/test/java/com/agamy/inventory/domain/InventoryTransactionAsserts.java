package com.agamy.inventory.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InventoryTransactionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryTransactionAllPropertiesEquals(InventoryTransaction expected, InventoryTransaction actual) {
        assertInventoryTransactionAutoGeneratedPropertiesEquals(expected, actual);
        assertInventoryTransactionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryTransactionAllUpdatablePropertiesEquals(InventoryTransaction expected, InventoryTransaction actual) {
        assertInventoryTransactionUpdatableFieldsEquals(expected, actual);
        assertInventoryTransactionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryTransactionAutoGeneratedPropertiesEquals(InventoryTransaction expected, InventoryTransaction actual) {
        assertThat(actual)
            .as("Verify InventoryTransaction auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryTransactionUpdatableFieldsEquals(InventoryTransaction expected, InventoryTransaction actual) {
        assertThat(actual)
            .as("Verify InventoryTransaction relevant properties")
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getQuantity()).as("check quantity").isEqualTo(expected.getQuantity()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInventoryTransactionUpdatableRelationshipsEquals(InventoryTransaction expected, InventoryTransaction actual) {
        assertThat(actual)
            .as("Verify InventoryTransaction relationships")
            .satisfies(a -> assertThat(a.getProduct()).as("check product").isEqualTo(expected.getProduct()));
    }
}
