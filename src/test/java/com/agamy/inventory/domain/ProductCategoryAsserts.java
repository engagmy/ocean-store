package com.agamy.inventory.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductCategoryAllPropertiesEquals(ProductCategory expected, ProductCategory actual) {
        assertProductCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertProductCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductCategoryAllUpdatablePropertiesEquals(ProductCategory expected, ProductCategory actual) {
        assertProductCategoryUpdatableFieldsEquals(expected, actual);
        assertProductCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductCategoryAutoGeneratedPropertiesEquals(ProductCategory expected, ProductCategory actual) {
        assertThat(actual)
            .as("Verify ProductCategory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()))
            .satisfies(a -> assertThat(a.getCreatedDate()).as("check createdDate").isEqualTo(expected.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductCategoryUpdatableFieldsEquals(ProductCategory expected, ProductCategory actual) {
        assertThat(actual)
            .as("Verify ProductCategory relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductCategoryUpdatableRelationshipsEquals(ProductCategory expected, ProductCategory actual) {
        // empty method
    }
}
